generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model auth_group {
  id                     Int                      @id @default(autoincrement())
  name                   String                   @unique(map: "name") @db.VarChar(150)
  auth_group_permissions auth_group_permissions[]
  auth_user_groups       auth_user_groups[]
}

model auth_group_permissions {
  id              BigInt          @id @default(autoincrement())
  group_id        Int
  permission_id   Int
  auth_permission auth_permission @relation(fields: [permission_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "auth_group_permissio_permission_id_84c5c92e_fk_auth_perm")
  auth_group      auth_group      @relation(fields: [group_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "auth_group_permissions_group_id_b120cbf9_fk_auth_group_id")

  @@unique([group_id, permission_id], map: "auth_group_permissions_group_id_permission_id_0cd325b0_uniq")
  @@index([permission_id], map: "auth_group_permissio_permission_id_84c5c92e_fk_auth_perm")
}

model auth_permission {
  id                         Int                          @id @default(autoincrement())
  name                       String                       @db.VarChar(255)
  content_type_id            Int
  codename                   String                       @db.VarChar(100)
  auth_group_permissions     auth_group_permissions[]
  django_content_type        django_content_type          @relation(fields: [content_type_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "auth_permission_content_type_id_2f476e4b_fk_django_co")
  auth_user_user_permissions auth_user_user_permissions[]

  @@unique([content_type_id, codename], map: "auth_permission_content_type_id_codename_01ab375a_uniq")
}

model auth_user {
  id                         Int                          @id @default(autoincrement())
  password                   String                       @db.VarChar(128)
  last_login                 DateTime?                    @db.DateTime(6)
  is_superuser               Boolean
  username                   String                       @unique(map: "username") @db.VarChar(150)
  first_name                 String                       @db.VarChar(150)
  last_name                  String                       @db.VarChar(150)
  email                      String                       @db.VarChar(254)
  is_staff                   Boolean
  is_active                  Boolean
  date_joined                DateTime                     @db.DateTime(6)
  auth_user_groups           auth_user_groups[]
  auth_user_user_permissions auth_user_user_permissions[]
  django_admin_log           django_admin_log[]
}

model auth_user_groups {
  id         BigInt     @id @default(autoincrement())
  user_id    Int
  group_id   Int
  auth_group auth_group @relation(fields: [group_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "auth_user_groups_group_id_97559544_fk_auth_group_id")
  auth_user  auth_user  @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "auth_user_groups_user_id_6a12ed8b_fk_auth_user_id")

  @@unique([user_id, group_id], map: "auth_user_groups_user_id_group_id_94350c0c_uniq")
  @@index([group_id], map: "auth_user_groups_group_id_97559544_fk_auth_group_id")
}

model auth_user_user_permissions {
  id              BigInt          @id @default(autoincrement())
  user_id         Int
  permission_id   Int
  auth_permission auth_permission @relation(fields: [permission_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "auth_user_user_permi_permission_id_1fbb5f2c_fk_auth_perm")
  auth_user       auth_user       @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "auth_user_user_permissions_user_id_a95ead1b_fk_auth_user_id")

  @@unique([user_id, permission_id], map: "auth_user_user_permissions_user_id_permission_id_14a6b632_uniq")
  @@index([permission_id], map: "auth_user_user_permi_permission_id_1fbb5f2c_fk_auth_perm")
}

model datalogger_activity_history {
  id         Int     @id @default(autoincrement())
  activity   String? @db.VarChar(255)
  user       String? @db.VarChar(255)
  start_time String? @db.VarChar(255)
  end_time   String? @db.VarChar(255)
}

model datalogger_components {
  id               BigInt             @id @default(autoincrement())
  key              String             @unique(map: "key") @db.VarChar(255)
  name             String             @db.VarChar(255)
  description      String?            @db.LongText
  status           String             @db.VarChar(5)
  created_at       DateTime           @db.DateTime(6)
  updated_at       DateTime           @db.DateTime(6)
  datalogger_items datalogger_items[]

  @@index([key, status], map: "key_status_idx")
  @@index([name], map: "name_idx")
}

model datalogger_config_bakumutu {
  id    BigInt  @id @default(autoincrement())
  key   String  @db.VarChar(45)
  value Decimal @db.Decimal(8, 2)
}

model datalogger_config_ispu {
  id     BigInt @id @default(autoincrement())
  ispu   String @db.VarChar(45)
  pm2_5  String @map("pm2.5") @db.VarChar(45)
  pm10   String @db.VarChar(45)
  so2    String @db.VarChar(45)
  co     String @db.VarChar(45)
  o3     String @db.VarChar(45)
  no2    String @db.VarChar(45)
  hc     String @db.VarChar(45)
  h_ispu String @db.VarChar(45)
}

model datalogger_config_warning {
  id          BigInt @id @default(autoincrement())
  method      String @db.LongText
  h_hour      String @db.VarChar(45)
  expression  String @db.LongText
  key         String @db.VarChar(45)
  message     String @db.VarChar(100)
  minimum     String @db.LongText
  maximum     String @db.LongText
  description String @db.LongText
}

model datalogger_configs {
  id          BigInt   @id @default(autoincrement())
  key         String   @unique(map: "key") @db.VarChar(255)
  name        String   @db.VarChar(255)
  value       String?  @db.LongText
  description String?  @db.LongText
  status      String   @db.VarChar(5)
  created_at  DateTime @db.DateTime(6)
  updated_at  DateTime @db.DateTime(6)
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model datalogger_connections {
  id                 BigInt               @id @default(autoincrement())
  key                String               @unique(map: "key") @db.VarChar(255)
  name               String               @db.VarChar(255)
  method             String               @db.VarChar(5)
  port               String               @db.VarChar(255)
  baudrate           Int                  @db.UnsignedInt
  bytesize           String               @db.VarChar(5)
  parity             String               @db.VarChar(5)
  stopbits           String               @db.VarChar(5)
  timeout            Decimal              @db.Decimal(8, 2)
  description        String?              @db.LongText
  status             String               @db.VarChar(5)
  created_at         DateTime             @db.DateTime(6)
  updated_at         DateTime             @db.DateTime(6)
  datalogger_sensors datalogger_sensors[]
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model datalogger_data_categories {
  id                        BigInt                      @id @default(autoincrement())
  key                       String                      @unique(map: "key") @db.VarChar(255)
  name                      String                      @db.VarChar(255)
  sequence                  Int                         @db.UnsignedInt
  description               String?                     @db.LongText
  created_at                DateTime                    @db.DateTime(6)
  updated_at                DateTime                    @db.DateTime(6)
  job_id                    BigInt?
  datalogger_jobs           datalogger_jobs?            @relation(fields: [job_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "datalogger_data_categories_job_id_eaf2a049_fk_datalogger_jobs_id")
  datalogger_data_histories datalogger_data_histories[]

  @@index([job_id], map: "datalogger_data_categories_job_id_eaf2a049_fk_datalogger_jobs_id")
}

model datalogger_data_histories {
  id                         BigInt                      @id @default(autoincrement())
  identifier                 String                      @unique(map: "identifier") @db.VarChar(255)
  datetime                   DateTime                    @db.DateTime(6)
  data_sampling              String                      @db.LongText
  collecting_state           String                      @db.VarChar(5)
  created_at                 DateTime                    @db.DateTime(6)
  updated_at                 DateTime                    @db.DateTime(6)
  data_category_id           BigInt?
  datalogger_data_categories datalogger_data_categories? @relation(fields: [data_category_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "datalogger_data_hist_data_category_id_86378799_fk_datalogge")

  @@index([data_category_id], map: "datalogger_data_hist_data_category_id_86378799_fk_datalogge")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model datalogger_events {
  id                    BigInt                  @id @default(autoincrement())
  key                   String                  @unique(map: "key") @db.VarChar(255)
  name                  String                  @db.VarChar(255)
  step                  Int                     @db.UnsignedInt
  description           String?                 @db.LongText
  status                String                  @db.VarChar(5)
  created_at            DateTime                @db.DateTime(6)
  updated_at            DateTime                @db.DateTime(6)
  datalogger_job_events datalogger_job_events[]
}

model datalogger_index {
  id         BigInt  @id @default(autoincrement())
  key        String  @db.VarChar(45)
  identifier String  @db.VarChar(14)
  h_index    String  @db.VarChar(45)
  h_v_index  Decimal @db.Decimal(8, 2)
  d_index    String  @db.VarChar(45)
  d_v_index  Decimal @db.Decimal(8, 2)
}

model datalogger_items {
  id                    BigInt                @id @default(autoincrement())
  key                   String                @unique(map: "key") @db.VarChar(255)
  label                 String                @db.VarChar(255)
  displayed             String                @db.VarChar(5)
  description           String?               @db.LongText
  status                String                @db.VarChar(5)
  created_at            DateTime              @db.DateTime(6)
  updated_at            DateTime              @db.DateTime(6)
  component_id          BigInt
  parameter_id          BigInt
  unit_id               BigInt
  datalogger_components datalogger_components @relation(fields: [component_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "datalogger_items_component_id_a784f5b5_fk_datalogge")
  datalogger_parameters datalogger_parameters @relation(fields: [parameter_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "datalogger_items_parameter_id_ad85128f_fk_datalogge")
  datalogger_units      datalogger_units      @relation(fields: [unit_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "datalogger_items_unit_id_81017853_fk_datalogger_units_id")

  @@index([component_id], map: "datalogger_items_component_id_a784f5b5_fk_datalogge")
  @@index([parameter_id], map: "datalogger_items_parameter_id_ad85128f_fk_datalogge")
  @@index([unit_id], map: "datalogger_items_unit_id_81017853_fk_datalogger_units_id")
}

model datalogger_job_events {
  id                BigInt            @id @default(autoincrement())
  event_id          BigInt
  job_id            BigInt
  datalogger_events datalogger_events @relation(fields: [event_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "datalogger_job_events_event_id_f0a116e2_fk_datalogger_events_id")
  datalogger_jobs   datalogger_jobs   @relation(fields: [job_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "datalogger_job_events_job_id_684439ef_fk_datalogger_jobs_id")

  @@unique([event_id, job_id], map: "datalogger_job_events_event_id_job_id_0386cad5_uniq")
  @@index([job_id], map: "datalogger_job_events_job_id_684439ef_fk_datalogger_jobs_id")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model datalogger_jobs {
  id                         BigInt                       @id @default(autoincrement())
  key                        String                       @unique(map: "key") @db.VarChar(255)
  name                       String                       @db.VarChar(255)
  class_name                 String                       @db.VarChar(255)
  method_name                String                       @db.VarChar(255)
  method_params              String?                      @db.VarChar(255)
  sequence                   Int                          @db.UnsignedInt
  description                String?                      @db.LongText
  status                     String                       @db.VarChar(5)
  created_at                 DateTime                     @db.DateTime(6)
  updated_at                 DateTime                     @db.DateTime(6)
  datalogger_data_categories datalogger_data_categories[]
  datalogger_job_events      datalogger_job_events[]
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model datalogger_parameters {
  id                              BigInt              @id @default(autoincrement())
  key                             String              @unique(map: "key") @db.VarChar(255)
  name                            String              @db.VarChar(255)
  output                          String              @db.VarChar(5)
  byteorder                       String              @db.VarChar(5)
  wordorder                       String              @db.VarChar(5)
  address                         Int                 @db.UnsignedInt
  data_type                       Int                 @db.UnsignedInt
  min_value                       Decimal             @db.Decimal(10, 5)
  max_value                       Decimal             @db.Decimal(10, 5)
  factor                          Decimal             @db.Decimal(10, 5)
  formula                         String?             @db.LongText
  description                     String?             @db.LongText
  status                          String              @db.VarChar(5)
  created_at                      DateTime            @db.DateTime(6)
  updated_at                      DateTime            @db.DateTime(6)
  sensor_id                       BigInt
  disabled_threshold              Boolean
  decode_value                    Boolean
  enable_ispu                     Boolean
  function_code                   String              @db.VarChar(5)
  orchestrator_reduction          Decimal             @db.Decimal(50, 25)
  orchestrator_factor             Decimal             @db.Decimal(10, 5)
  enable_orchestrator_calibration Boolean
  enable_orchestrator_zeroing     Boolean
  tolerance                       Decimal             @default(0.20000) @db.Decimal(10, 5)
  datalogger_items                datalogger_items[]
  datalogger_sensors              datalogger_sensors  @relation(fields: [sensor_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "datalogger_parameter_sensor_id_b40dc424_fk_datalogge")
  datalogger_values               datalogger_values[]

  @@index([sensor_id], map: "datalogger_parameter_sensor_id_b40dc424_fk_datalogge")
}

model datalogger_refrences {
  id                BigInt              @id @default(autoincrement())
  identifier        String              @unique(map: "identifier") @db.VarChar(255)
  datetime          DateTime            @db.DateTime(6)
  uploaded_portal   String              @db.VarChar(5)
  uploaded_klhk     String              @db.VarChar(5)
  created_at        DateTime            @db.DateTime(6)
  updated_at        DateTime            @db.DateTime(6)
  processing_state  String              @default("1") @db.VarChar(5)
  message           String?             @db.Text
  payload           String?             @db.Text
  response          String?             @db.Text
  datalogger_values datalogger_values[]
}

model datalogger_refrences_hourly {
  id               BigInt   @id @default(autoincrement())
  identifier       String   @unique(map: "identifier") @db.VarChar(255)
  datetime         DateTime @db.DateTime(6)
  uploaded_portal  String   @db.VarChar(5)
  uploaded_klhk    String   @db.VarChar(5)
  created_at       DateTime @db.DateTime(6)
  updated_at       DateTime @db.DateTime(6)
  processing_state String?  @db.VarChar(5)
  message          String?  @db.Text
  payload          String?  @db.Text
  response         String?  @db.Text
  message_portal   String?  @db.Text
  response_portal  String?  @db.Text
  uploaded_backup  String?  @db.VarChar(5)
  response_backup  String?  @db.Text
}

model datalogger_schedulers {
  id            BigInt   @id @default(autoincrement())
  key           String   @unique(map: "key") @db.VarChar(255)
  name          String   @db.VarChar(255)
  class_name    String   @db.VarChar(255)
  method_name   String   @db.VarChar(255)
  method_params String?  @db.VarChar(255)
  hour          String   @db.VarChar(5)
  minute        String   @db.VarChar(5)
  second        String   @db.VarChar(5)
  description   String?  @db.LongText
  status        String   @db.VarChar(5)
  created_at    DateTime @db.DateTime(6)
  updated_at    DateTime @db.DateTime(6)
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model datalogger_sensors {
  id                     BigInt                  @id @default(autoincrement())
  key                    String                  @unique(map: "key") @db.VarChar(255)
  name                   String                  @db.VarChar(255)
  uid                    Int                     @db.UnsignedInt
  description            String?                 @db.LongText
  status                 String                  @db.VarChar(5)
  created_at             DateTime                @db.DateTime(6)
  updated_at             DateTime                @db.DateTime(6)
  connection_id          BigInt
  datalogger_parameters  datalogger_parameters[]
  datalogger_connections datalogger_connections  @relation(fields: [connection_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "datalogger_sensors_connection_id_cd55b223_fk_datalogge")

  @@index([connection_id], map: "datalogger_sensors_connection_id_cd55b223_fk_datalogge")
}

model datalogger_units {
  id               BigInt             @id @default(autoincrement())
  key              String             @unique(map: "key") @db.VarChar(255)
  label            String             @db.VarChar(255)
  description      String?            @db.LongText
  status           String             @db.VarChar(5)
  created_at       DateTime           @db.DateTime(6)
  updated_at       DateTime           @db.DateTime(6)
  datalogger_items datalogger_items[]
}

model datalogger_values {
  id                    BigInt                @id @default(autoincrement())
  raw_value             Decimal               @db.Decimal(8, 2)
  value                 Decimal               @db.Decimal(8, 2)
  created_at            DateTime              @db.DateTime(6)
  updated_at            DateTime              @db.DateTime(6)
  parameter_id          BigInt
  refrence_id           BigInt
  processing_state      String                @default("1") @db.VarChar(5)
  type                  String                @default("1") @db.VarChar(5)
  h_index               String?               @db.VarChar(50)
  h_v_index             Decimal?              @db.Decimal(10, 4)
  d_index               String?               @db.VarChar(50)
  d_v_index             Decimal?              @db.Decimal(10, 4)
  datalogger_parameters datalogger_parameters @relation(fields: [parameter_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "datalogger_values_parameter_id_5717298c_fk_datalogge")
  datalogger_refrences  datalogger_refrences  @relation(fields: [refrence_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "datalogger_values_refrence_id_a3a00017_fk_datalogge")

  @@index([parameter_id], map: "datalogger_values_parameter_id_5717298c_fk_datalogge")
  @@index([refrence_id], map: "datalogger_values_refrence_id_a3a00017_fk_datalogge")
  @@index([created_at], map: "idx_datalogger_values_created_at")
}

model datalogger_values_index {
  id           Int     @id @default(autoincrement())
  key          String? @db.VarChar(45)
  values_id    Int
  refrences_id Int
  last_index   String? @db.VarChar(45)
  v_last_index String? @db.VarChar(45)
  index        String? @db.VarChar(45)
  v_index      String? @db.VarChar(45)

  @@index([values_id], map: "idx_values_id")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model django_admin_log {
  id                  Int                  @id @default(autoincrement())
  action_time         DateTime             @db.DateTime(6)
  object_id           String?              @db.LongText
  object_repr         String               @db.VarChar(200)
  action_flag         Int                  @db.UnsignedSmallInt
  change_message      String               @db.LongText
  content_type_id     Int?
  user_id             Int
  django_content_type django_content_type? @relation(fields: [content_type_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "django_admin_log_content_type_id_c4bce8eb_fk_django_co")
  auth_user           auth_user            @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "django_admin_log_user_id_c564eba6_fk_auth_user_id")

  @@index([content_type_id], map: "django_admin_log_content_type_id_c4bce8eb_fk_django_co")
  @@index([user_id], map: "django_admin_log_user_id_c564eba6_fk_auth_user_id")
}

model django_content_type {
  id                                                           Int                       @id @default(autoincrement())
  app_label                                                    String                    @db.VarChar(100)
  model                                                        String                    @db.VarChar(100)
  auth_permission                                              auth_permission[]
  django_admin_log                                             django_admin_log[]
  eav_attribute_entity_ct                                      eav_attribute_entity_ct[]
  eav_value_eav_value_entity_ct_idTodjango_content_type        eav_value[]               @relation("eav_value_entity_ct_idTodjango_content_type")
  eav_value_eav_value_generic_value_ct_idTodjango_content_type eav_value[]               @relation("eav_value_generic_value_ct_idTodjango_content_type")

  @@unique([app_label, model], map: "django_content_type_app_label_model_76bd3d3b_uniq")
}

model django_migrations {
  id      BigInt   @id @default(autoincrement())
  app     String   @db.VarChar(255)
  name    String   @db.VarChar(255)
  applied DateTime @db.DateTime(6)
}

model django_session {
  session_key  String   @id @db.VarChar(40)
  session_data String   @db.LongText
  expire_date  DateTime @db.DateTime(6)

  @@index([expire_date], map: "django_session_expire_date_a5c62663")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model eav_attribute {
  id            BigInt         @id @default(autoincrement())
  name          String         @db.VarChar(100)
  slug          String         @unique(map: "slug") @db.VarChar(50)
  description   String?        @db.VarChar(256)
  datatype      String         @db.VarChar(6)
  created       DateTime       @db.DateTime(6)
  modified      DateTime       @db.DateTime(6)
  required      Boolean
  display_order Int            @db.UnsignedInt
  enum_group_id BigInt?
  eav_enumgroup eav_enumgroup? @relation(fields: [enum_group_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "eav_attribute_enum_group_id_47628614_fk")
  eav_value     eav_value[]

  @@index([enum_group_id], map: "eav_attribute_enum_group_id_47628614_fk")
}

model eav_attribute_entity_ct {
  id                  BigInt              @id @default(autoincrement())
  attribute_id        BigInt
  contenttype_id      Int
  django_content_type django_content_type @relation(fields: [contenttype_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "eav_attribute_entity_contenttype_id_6a747efe_fk_django_co")

  @@unique([attribute_id, contenttype_id], map: "eav_attribute_entity_ct_attribute_id_contenttype_8d784edd_uniq")
  @@index([contenttype_id], map: "eav_attribute_entity_contenttype_id_6a747efe_fk_django_co")
}

model eav_enumgroup {
  id            BigInt          @id @default(autoincrement())
  name          String          @unique(map: "name") @db.VarChar(100)
  eav_attribute eav_attribute[]
}

model eav_enumgroup_values {
  id           BigInt @id @default(autoincrement())
  enumgroup_id BigInt
  enumvalue_id BigInt

  @@unique([enumgroup_id, enumvalue_id], map: "eav_enumgroup_values_enumgroup_id_enumvalue_id_bec52735_uniq")
  @@index([enumvalue_id], map: "eav_enumgroup_values_enumvalue_id_52f83e3a_fk_eav_enumvalue_id")
}

model eav_enumvalue {
  id        BigInt      @id @default(autoincrement())
  value     String      @unique(map: "value") @db.VarChar(50)
  eav_value eav_value[]
}

model eav_value {
  id                                                                     BigInt               @id @default(autoincrement())
  entity_id                                                              Int?
  value_text                                                             String?              @db.LongText
  value_float                                                            Float?
  value_int                                                              BigInt?
  value_date                                                             DateTime?            @db.DateTime(6)
  value_bool                                                             Boolean?
  generic_value_id                                                       Int?
  created                                                                DateTime             @db.DateTime(6)
  modified                                                               DateTime             @db.DateTime(6)
  attribute_id                                                           BigInt
  entity_ct_id                                                           Int
  generic_value_ct_id                                                    Int?
  value_enum_id                                                          BigInt?
  value_json                                                             Json?
  value_csv                                                              String?              @db.LongText
  entity_uuid                                                            String?              @db.Char(32)
  eav_attribute                                                          eav_attribute        @relation(fields: [attribute_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "eav_value_attribute_id_6fd472ba_fk")
  django_content_type_eav_value_entity_ct_idTodjango_content_type        django_content_type  @relation("eav_value_entity_ct_idTodjango_content_type", fields: [entity_ct_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "eav_value_entity_ct_id_5cfd530e_fk_django_content_type_id")
  django_content_type_eav_value_generic_value_ct_idTodjango_content_type django_content_type? @relation("eav_value_generic_value_ct_idTodjango_content_type", fields: [generic_value_ct_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "eav_value_generic_value_ct_id_d4681436_fk_django_content_type_id")
  eav_enumvalue                                                          eav_enumvalue?       @relation(fields: [value_enum_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "eav_value_value_enum_id_86e48f74_fk")

  @@index([attribute_id], map: "eav_value_attribute_id_6fd472ba_fk")
  @@index([entity_ct_id], map: "eav_value_entity_ct_id_5cfd530e_fk_django_content_type_id")
  @@index([generic_value_ct_id], map: "eav_value_generic_value_ct_id_d4681436_fk_django_content_type_id")
  @@index([value_enum_id], map: "eav_value_value_enum_id_86e48f74_fk")
}
